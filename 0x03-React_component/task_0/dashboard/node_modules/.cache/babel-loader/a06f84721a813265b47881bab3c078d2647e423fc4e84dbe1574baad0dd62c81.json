{"ast":null,"code":"var _jsxFileName = \"/home/fred/alx_se/alx-react/0x03-React_component/task_0/dashboard/src/Notifications/Notifications.js\";\nimport './Notifications.css';\nimport { getLatestNotification } from \"../utils/utils\";\nimport React, { Fragment } from 'react';\nimport closeIcon from '../assets/Close-icon.png';\nimport PropTypes from \"prop-types\";\nimport NotificationItem from './NotificationItem';\nimport NotificationItemShape from './NotificationItemShape';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Notification = ({\n  displayDrawer,\n  listNotifications\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuItem\",\n      children: \"Your Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), displayDrawer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Notifications\",\n      children: [listNotifications.length ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here is the list of notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: listNotifications.map(({\n            id,\n            type,\n            value,\n            html\n          }) => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            type: type,\n            value: value,\n            html: html\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No new notifications for now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-icon\",\n        \"aria-label\": \"Close\",\n        onClick: () => console.log('Close button has been clicked'),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: closeIcon,\n          alt: \"Close\",\n          style: {\n            height: '10px',\n            width: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Notification;\nNotification.propTypes = {\n  displayDrawer: PropTypes.bool,\n  listNotifications: PropTypes.arrayOf(NotificationItemShape)\n};\nNotification.defaultProps = {\n  displayDrawer: false,\n  listNotifications: []\n};\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["getLatestNotification","React","Fragment","closeIcon","PropTypes","NotificationItem","NotificationItemShape","jsxDEV","_jsxDEV","Notification","displayDrawer","listNotifications","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","id","type","value","html","onClick","console","log","src","alt","style","height","width","_c","propTypes","bool","arrayOf","defaultProps","$RefreshReg$"],"sources":["/home/fred/alx_se/alx-react/0x03-React_component/task_0/dashboard/src/Notifications/Notifications.js"],"sourcesContent":["import './Notifications.css';\nimport { getLatestNotification } from \"../utils/utils\";\nimport React, { Fragment } from 'react';\nimport closeIcon from '../assets/Close-icon.png';\nimport PropTypes from \"prop-types\";\nimport NotificationItem from './NotificationItem';\nimport NotificationItemShape from './NotificationItemShape';\n\nexport const Notification = ({ displayDrawer, listNotifications }) => {\n  return (\n    <div className='notifications-wrapper'>\n      <div className='menuItem'>Your Notifications</div>\n      {displayDrawer && (\n        <div className='Notifications'>\n        {listNotifications.length ? (\n          <Fragment>\n            <p>Here is the list of notifications</p>\n            <ul>\n              {listNotifications.map(({ id, type, value, html }) => (\n                <NotificationItem\n                  key={id}\n                  type={type}\n                  value={value}\n                  html={html}\n                />\n              ))}\n            </ul>\n          </Fragment>\n        ) : (\n          <p>No new notifications for now</p>\n        )}\n          <button\n            className='close-icon'\n            aria-label='Close'\n            onClick={() => console.log('Close button has been clicked')}\n          >\n            <img\n              src={closeIcon}\n              alt='Close'\n              style={{ height: '10px', width: '10px' }}\n            />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nNotification.propTypes = {\n  displayDrawer: PropTypes.bool,\n  listNotifications: PropTypes.arrayOf(NotificationItemShape)\n};\n\nNotification.defaultProps = {\n  displayDrawer: false,\n  listNotifications: []\n};\n\nexport default Notification;\n"],"mappings":";AAAA,OAAO,qBAAqB;AAC5B,SAASA,qBAAqB,QAAQ,gBAAgB;AACtD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,0BAA0B;AAChD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,qBAAqB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAkB,CAAC,KAAK;EACpE,oBACEH,OAAA;IAAKI,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCL,OAAA;MAAKI,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACjDP,aAAa,iBACZF,OAAA;MAAKI,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC7BF,iBAAiB,CAACO,MAAM,gBACvBV,OAAA,CAACN,QAAQ;QAAAW,QAAA,gBACPL,OAAA;UAAAK,QAAA,EAAG;QAAiC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxCT,OAAA;UAAAK,QAAA,EACGF,iBAAiB,CAACQ,GAAG,CAAC,CAAC;YAAEC,EAAE;YAAEC,IAAI;YAAEC,KAAK;YAAEC;UAAK,CAAC,kBAC/Cf,OAAA,CAACH,gBAAgB;YAEfgB,IAAI,EAAEA,IAAK;YACXC,KAAK,EAAEA,KAAM;YACbC,IAAI,EAAEA;UAAK,GAHNH,EAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIR,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,gBAEXT,OAAA;QAAAK,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACnC,eACCT,OAAA;QACEI,SAAS,EAAC,YAAY;QACtB,cAAW,OAAO;QAClBY,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAE;QAAAb,QAAA,eAE5DL,OAAA;UACEmB,GAAG,EAAExB,SAAU;UACfyB,GAAG,EAAC,OAAO;UACXC,KAAK,EAAE;YAAEC,MAAM,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAO;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACe,EAAA,GAtCWvB,YAAY;AAwCzBA,YAAY,CAACwB,SAAS,GAAG;EACvBvB,aAAa,EAAEN,SAAS,CAAC8B,IAAI;EAC7BvB,iBAAiB,EAAEP,SAAS,CAAC+B,OAAO,CAAC7B,qBAAqB;AAC5D,CAAC;AAEDG,YAAY,CAAC2B,YAAY,GAAG;EAC1B1B,aAAa,EAAE,KAAK;EACpBC,iBAAiB,EAAE;AACrB,CAAC;AAED,eAAeF,YAAY;AAAC,IAAAuB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}